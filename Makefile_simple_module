# Generic makefile for simple modules.

# Defines for C files
HOST_FEATURES += -DOSC_HOST
TARGET_FEATURES += -DOSC_TARGET
TARGET_SIM_FEATURES += -DOSC_TARGET -DOSC_SIM

# Host-Compiler executables and flags
HOST_CC := gcc -std=gnu99 -Wall -Wno-long-long -pedantic -O2 -I.. -g

# Cross-Compiler executables and flags
TARGET_CC := bfin-uclinux-gcc -std=gnu99 -Wall -Wno-long-long -ggdb3 -I..

SOURCES_host := $(wildcard *_host.c)
SOURCES_target := $(wildcard *_target.c)
SOURCES := $(filter-out $(SOURCES_host) $(SOURCES_target), $(wildcard *.c))
SOURCES_host += $(SOURCES)
SOURCES_target += $(SOURCES)

.PHONY: all host target clean
all: host target

host: $(SOURCES_host:.c=_host.o)
target: $(SOURCES_target:.c=_target.o) $(SOURCES_target:.c=_target_sim.o)

clean:
	rm -f *.o *.d *.gdb
	
# Host object file
%_host.o: %.c
	$(HOST_CC) -MD $(HOST_FEATURES) -c $< -o $@
	@ { cat $(@:.o=.d); sed 's/#.*//; s/^[^:]*: *//; s/ *\\$$//; /^$$/ d; s/$$/ :/' < $(@:.o=.d); } >> $(@:.o=.d~); mv -f $(@:.o=.d){~,}

# Target object file
%_target.o: %.c
	$(TARGET_CC) -MD $(TARGET_FEATURES) -c $< -o $@
	@ { cat $(@:.o=.d); sed 's/#.*//; s/^[^:]*: *//; s/ *\\$$//; /^$$/ d; s/$$/ :/' < $(@:.o=.d); } >> $(@:.o=.d~); mv -f $(@:.o=.d){~,}

%_target_sim.o: %.c
	$(TARGET_CC) -MD $(TARGET_SIM_FEATURES) -c $< -o $@
	@ { cat $(@:.o=.d); sed 's/#.*//; s/^[^:]*: *//; s/ *\\$$//; /^$$/ d; s/$$/ :/' < $(@:.o=.d); } >> $(@:.o=.d~); mv -f $(@:.o=.d){~,}

-include *.d
