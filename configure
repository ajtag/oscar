#! /bin/bash
# Script to generate the configuration '.config' file for the framework.
# Copyright (C) 2008 Supercomputing Systems AG
# 
# This library is free software; you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; either version 2.1 of the License, or (at your option)
# any later version.
# 
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
# 
# You should have received a copy of the GNU Lesser General Public License along
# with this library; if not, write to the Free Software Foundation, Inc., 51
# Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

trim() {
	# trim $1: cut of leading and trailing white space
	# $1: the string to trim
	
	echo $1
}

get_config() {
	# get_config $1 $2: load a configuration from a configuration file
	# $1: the name of the configuration file
	# $2: name of the configuration
	
	if [ -e "$1" ]; then
		trim "$(grep -E "^$2" < $1 | cut -d "=" -f 2)"
	fi
}

read_config() {
	# read_config $1: read settings from a configuration file
	# $1: name of the configuration file
	
	local NAME, VALUE
	
	cat "$1" | while read i; do
		NAME=$(trim $(echo $i | cut -d "=" -f 1))
		VALUE=$(trim $(echo $i | cut -d "=" -f 2))
		
		eval $NAME="$VALUE"
	done
}

ask() {
	# ask $1 $2: ask the user something and return the answer
	# $1: the default value
	# $2: the prompt
	
	read -e -p "$2 [$1]: " 
	if [ "$REPLY" ]; then
		echo $REPLY
	else
		echo $1
	fi
}

ask_config() {
	# ask_config $1 $2: ask the user about a configuration setting
	# $1: the name of the variable to use as default and set
	# $2 the promt to ask the user with
	
	local ANSWER
	
	ANSWER=$(ask $(eval \$$1) "$2")
}

# global parameters
CONFIG_FILE=".config"
CONFIG_NAMES=(CONFIG_BOARD CONFIG_FIRMWARE)
CONFIG_PROMPTS=("Select the board you are using (INDXCAM/LEANXCAM/MESA_SR4K)", "Enter the path to the firmware you want to use, leave blank to disable cpld functionality")
CONFIG_VALUES=("MESA_SR4K" "")

 #echo $(get_config "$CONFIG_FILE" "CONFIG_VAR_1")

# ask the user about configurations
for i in ${!CONFIG_NAMES[*]}; do
	NAME=${CONFIG_NAMES[$i]}
	PROMPT=${CONFIG_PROMPTS[$i]}
	VALUE=$(get_config $CONFIG_FILE $NAME)
	if ! [ $VALUE ]; then
		VALUE=${CONFIG_VALUES[$i]}
	fi
	
	VALUE=$(ask "$VALUE" "$PROMPT")
	CONFIG_VALUES[$i]=$VALUE
done

# write the configuration file
rm -f "${CONFIG_FILE}_new"
for i in ${!CONFIG_NAMES[*]}; do
	NAME=${CONFIG_NAMES[$i]}
	VALUE=${CONFIG_VALUES[$i]}
	
	echo "$NAME = $VALUE" >> "${CONFIG_FILE}_new"
done
mv -f "${CONFIG_FILE}_new" "${CONFIG_FILE}"
